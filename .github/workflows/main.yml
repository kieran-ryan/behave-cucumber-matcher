name: main

on: [push]

jobs:
  static-analysis:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.10"]
        os: [ubuntu-latest]
    name: Static Analysis
    steps:
      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install lint dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --requirement requirements-dev.txt
      - name: Lint Python code
        run: ruff .
      - name: Check Python formatting
        run: black . --check
      - name: Check pyproject.toml formatting
        run: pyprojectsort --check
      - name: Check cyclomatic complexity
        run: radon cc .
      - name: Check maintainability index
        run: radon mi .
      - name: Check types
        run: mypy .
      - name: Check security issues
        run: bandit --configfile=pyproject.toml --severity-level=medium --recursive .
      - name: Check performance issues
        run: perflint .

  run-tests:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        python-version: ["3.10"]
        os: [ubuntu-latest]
    name: Test with Python ${{ matrix.python-version }} on ${{ matrix.os }}
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/checkout@v2
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --requirement requirements-test.txt
      - name: Run tests
        run: make coverage
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: docs/coverage
          retention-days: 5

  build-docs:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        python-version: ["3.10"]
        os: [ubuntu-latest]
    name: Build docs with Python ${{ matrix.python-version }} on ${{ matrix.os }}
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/checkout@v2
      - name: Install docs dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --requirement requirements-docs.txt
      - name: Build docs
        run: make docs
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.event_name == 'release' }}
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/build/html/
          force_orphan: true
